syntax = "proto3";

package example;

// Import the protogo_values options
import "proto/protogo_values/options.proto";

// Optional: import other common options you might use
import "google/api/field_behavior.proto";
import "buf/validate/validate.proto";

option go_package = "github.com/benjamin-rood/protogo-values/examples/gen";

message User {
  string id = 1;
  string name = 2;
  string email = 3;
}

message Product {
  string sku = 1;
  string name = 2;
  double price = 3;
}

message OrderItem {
  string product_id = 1;
  int32 quantity = 2;
  double unit_price = 3;
}

message ExampleMessage {
  // Using the new field option approach (recommended)
  // This generates: Users []User instead of []*User
  repeated User users = 1 [
    (google.api.field_behavior) = REQUIRED,
    (buf.validate.field).repeated.min_items = 1,
    (protogo_values.value_slice) = true
  ];
  
  // Multiple field options can be combined
  repeated Product products = 2 [
    (protogo_values.value_slice) = true,
    (buf.validate.field).repeated.max_items = 100
  ];
  
  // Using structured field options (for future extensibility)
  repeated OrderItem order_items = 3 [
    (protogo_values.field_opts).value_slice = true
  ];
  
  // Explicitly using pointer slices (default behavior)
  repeated User admin_users = 4 [
    (protogo_values.value_slice) = false
  ];
  
  // No field option = default pointer slice behavior
  repeated Product featured_products = 5;
  
  // Primitives remain value slices regardless of options
  repeated string tags = 6 [
    (protogo_values.value_slice) = true  // Has no effect on primitives
  ];
  
  repeated int32 category_ids = 7;  // Always []int32
  
  // Non-repeated fields are unaffected
  User primary_user = 8 [
    (protogo_values.value_slice) = true  // Ignored for singular fields
  ];
}